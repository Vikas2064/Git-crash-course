Version control system : it is also known as source control. it is used for tacking and manageing the software code changes.
famous VCS :-->
1. Git
2. Apache Subversion
3. Piper (Used by google)

learn type of Version control system 

how to set the global user name and user email :--> 
   git config --global user.email 'user_email'
   git config --global user.name 'user_name'

To track any repo we have to initialize that repo as git repo:-->
   to do that we have to run the following command in that repo 
   1. git init 
when we run git init command a hidden folder(.git) is created inside the folder which is initialized as git repo
which store the information how this repo is tracked and this folder must never be touched
if any particular file is not tacked then to start tracking it we should run the following command to
   1. git add file_Name

when we start adding new line of code in a file in vs code then it start with blue(or some other color) which shows
something is added in the file 

if we want to know what are the changes that are done the file from the privious code then we have to run the following command:-->
   1. git diff 

if we want to add all the new file and new folder then we have to run the follwing command :-->
   1. git add . 
if we want to remove the any file then we can run following command :-->
  1. git rm file_path

Commiting in git :----> to track the file or folder over time 
   1. We we make some changes to the files and if we think that we have done changing then we commit all the chages with messages(not necessary)
   2. Every commit has an id and message

if we want to see all the commit history then we have to run following commands:
   1. git log (it give the information about all the commit)

if we want to see all the code changes in a particular commit then we can use the following command:--> 
   1. git show commit_id  

if we want to know which author makes what changes in a file then we have to use run following command :-->
   1. git blame file_name

 
Staging Area :--> it is the area that contain the files which will be commited 
   1. we can put a file in the staging area using git add command.
   2. git status :-->it tell us which file has been modified 

Revert back :--> if we think that there is a bug in a file after changing something then we can to back to privious version 
  1. commits are in the form of linked list and after each commit a node(for understanding) is inserted at the head(HEAD) of the linked list 
  2. so head always points to the latest commit
how to revert back:--> 
   1. first way we can make head point to privious commit (hard way)  for that run the following command git reset --hard commit_id
      in the above way we also loose some useful commit information because all the linear commit will be revert back or they will be removed from history
   2. we can avoid the above way by using the following command:-->
      git revert commit_id 
      the above command will revert the current code to the privious commit(corresponding to commit_id) 
      